{"version":3,"sources":["components/Home/HomePage.js","components/About/AboutPage.js","components/PageNotFound.js","appDispatcher.js","actions/actionTypes.js","components/stores/jogosStore.js","api/apiUtils.js","api/lotofacilApi.js","actions/lotofacilActions.js","components/Loteria/Lotofacil/LotofacilItem.js","components/Loteria/Lotofacil/LotofacilList.js","components/Loteria/Lotofacil/LotofacilPage.js","components/_common/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","AboutPage","PageNotFound","dispatcher","Dispatcher","actionTypes","IMPORT_LOTOFACIL","LOAD_LOTOFACIL","GET_JOGO_LOTOFACIL","_jogos","store","callback","this","on","removeListener","emit","EventEmitter","register","action","actionType","jogos","emitChange","handleResponse","_x","_handleResponse","apply","arguments","_callee","response","error","regenerator_default","wrap","_context","prev","next","ok","abrupt","json","status","text","sent","Error","stop","handleError","console","baseUrl","concat","process","loadJogos","listJogos","localStorage","getItem","Promise","resolve","JSON","parse","dispatch","fetch","then","catch","success","setItem","stringify","useStyles","makeStyles","theme","checkedBox","backgroundColor","color","border","flex-basis","margin","padding-top","padding-bottom","textAlign","uncheckedBox","LotofacilItem","props","classes","map","inicio","Box","display","alignItems","alignContent","width","key","jogo","numeros","slice","element","index","className","root","flexWrap","justifyContent","overflow","palette","background","paper","GridList","height","LotofacilList","cellHeight","cols","spacing","gridList","data","item","GridListTile","id","Lotofacil_LotofacilItem","GridListTileBar","title","seconds","_seconds","moment","format","LotofacilPage","_useState","useState","jogosStore","getJogos","_useState2","Object","slicedToArray","setJogos","onChange","useEffect","addChangeListener","length","removeChangeListener","Lotofacil_LotofacilList","flexGrow","menuButton","marginRight","Header","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","handleClose","AppBar","position","Toolbar","IconButton","edge","aria-label","Menu_default","Typography","variant","Button","component","RouterLink","to","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu_Menu","keepMounted","open","Boolean","onClose","MenuItem","App","Fragment","_common_Header","react_router","exact","path","window","location","hostname","match","ReactDOM","render","react_router_dom","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.066e3949.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1>HomePage</h1>\r\n  </div>\r\n);\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst AboutPage = () => (\r\n  <div>\r\n    <h1>AboutPage</h1>\r\n  </div>\r\n);\r\nexport default AboutPage;\r\n","import React from \"react\";\r\n\r\nconst PageNotFound = () => <h1>Oops! Page not found.</h1>;\r\n\r\nexport default PageNotFound;\r\n","import { Dispatcher } from \"flux\";\r\nconst dispatcher = new Dispatcher();\r\nexport default dispatcher;\r\n","export default {\r\n  IMPORT_LOTOFACIL: \"IMPORT_LOTOFACIL\",\r\n  LOAD_LOTOFACIL: \"LOAD_LOTOFACIL\",\r\n  GET_JOGO_LOTOFACIL: \"GET_JOGO_LOTOFACIL\"\r\n};\r\n","import { EventEmitter } from \"events\";\r\nimport Dispatcher from \"../../appDispatcher\";\r\nimport actionTypes from \"../../actions/actionTypes\";\r\n\r\nconst CHANGE_EVENT = \"change\";\r\nlet _jogos = [];\r\n\r\nclass JogoStore extends EventEmitter {\r\n  addChangeListener(callback) {\r\n    this.on(CHANGE_EVENT, callback);\r\n  }\r\n\r\n  removeChangeListener(callback) {\r\n    this.removeListener(CHANGE_EVENT, callback);\r\n  }\r\n\r\n  emitChange() {\r\n    this.emit(CHANGE_EVENT);\r\n  }\r\n\r\n  getJogos() {\r\n    return _jogos;\r\n  }\r\n}\r\n\r\nconst store = new JogoStore();\r\nDispatcher.register(action => {\r\n  switch (action.actionType) {\r\n    case actionTypes.LOAD_LOTOFACIL:\r\n      _jogos = action.jogos;\r\n      store.emitChange();\r\n      break;\r\n    default:\r\n    // nothing to do\r\n  }\r\n});\r\nexport default store;\r\n","export async function handleResponse(response) {\r\n  if (response.ok) return response.json();\r\n  if (response.status === 400) {\r\n    // So, a server-side validation error occurred.\r\n    // Server side validation returns a string error message, so parse as text instead of json.\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nexport function handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  console.error(\"API call failed. \" + error);\r\n  throw error;\r\n}\r\n","import { handleResponse, handleError } from \"./apiUtils\";\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/lotofacil/`;\r\n\r\nexport function getList() {\r\n  return fetch(baseUrl + \"?initialRecord=0&recordCount=100\")\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getById(id) {\r\n  return fetch(baseUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n","import dispatcher from \"../appDispatcher\";\r\nimport * as lotofacilApi from \"../api/lotofacilApi\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport function loadJogos() {\r\n  var listJogos = localStorage.getItem(\"listJogos\");\r\n  if (listJogos) {\r\n    return new Promise(resolve => {\r\n      var jogos = JSON.parse(listJogos);\r\n      dispatcher.dispatch({\r\n        actionType: actionTypes.LOAD_LOTOFACIL,\r\n        jogos\r\n      });\r\n      resolve();\r\n      return;\r\n    });\r\n  }\r\n  return lotofacilApi.getList().then(jogos => {\r\n    if (jogos.success) {\r\n      localStorage.setItem(\"listJogos\", JSON.stringify(jogos));\r\n    }\r\n    dispatcher.dispatch({\r\n      actionType: actionTypes.LOAD_LOTOFACIL,\r\n      jogos\r\n    });\r\n  });\r\n}\r\n\r\nexport function loadJogo(id) {\r\n  return lotofacilApi.getById(id).then(jogo => {\r\n    dispatcher.dispatch({\r\n      actionType: actionTypes.GET_JOGO_LOTOFACIL,\r\n      jogo\r\n    });\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nconst useStyles = makeStyles(theme => ({\r\n  checkedBox: {\r\n    backgroundColor: \"#aaa\",\r\n    color: \"white\",\r\n    border: \"1px solid orange\",\r\n    \"flex-basis\": \"25%\",\r\n    margin: 5,\r\n    \"padding-top\": 5,\r\n    \"padding-bottom\": 5,\r\n    textAlign: \"center\"\r\n  },\r\n  uncheckedBox: {\r\n    border: \"1px solid orange\",\r\n    \"flex-basis\": \"25%\",\r\n    margin: 5,\r\n    \"padding-top\": 5,\r\n    \"padding-bottom\": 5,\r\n    textAlign: \"center\"\r\n  }\r\n}));\r\nfunction LotofacilItem(props) {\r\n  const classes = useStyles();\r\n  const groups = [0, 5, 10, 15, 20, 25];\r\n  return groups.map(inicio => {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"stretch\"\r\n        alignContent=\"stretch\"\r\n        width=\"100%\"\r\n        key={inicio}\r\n      >\r\n        {props.jogo.numeros.slice(inicio, inicio + 5).map((element, index) => {\r\n          return (\r\n            <Box\r\n              key={index}\r\n              className={element ? classes.checkedBox : classes.uncheckedBox}\r\n            >\r\n              {index + inicio + 1}\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n    );\r\n  });\r\n}\r\nexport default LotofacilItem;\r\n","import React from \"react\";\r\nimport LotofacilItem from \"./LotofacilItem\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  GridList: {\r\n    width: \"100%\",\r\n    height: \"100vh\"\r\n  }\r\n}));\r\n\r\nfunction formataData(seconds) {\r\n  var mData = moment(`/Date(${seconds}-0300)/`);\r\n  return mData.format(\"DD/MM/YYYY\");\r\n}\r\n\r\nfunction LotofacilList(props) {\r\n  const classes = useStyles();\r\n  if (props.jogos && props.jogos.success) {\r\n    return (\r\n      <GridList\r\n        cellHeight={260}\r\n        cols={6}\r\n        spacing={10}\r\n        className={classes.gridList}\r\n      >\r\n        {props.jogos.data.map(item => {\r\n          return (\r\n            <GridListTile key={item.id}>\r\n              <LotofacilItem jogo={item} key={item.id} />\r\n              <GridListTileBar\r\n                title={`${item.id} - ${formataData(item.data._seconds)}`}\r\n              />\r\n            </GridListTile>\r\n          );\r\n        })}\r\n      </GridList>\r\n    );\r\n  } else {\r\n    return <p>Loading data</p>;\r\n  }\r\n}\r\nexport default LotofacilList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport jogosStore from \"../../stores/jogosStore\";\r\nimport { loadJogos } from \"../../../actions/lotofacilActions\";\r\nimport LotofacilList from \"./LotofacilList\";\r\nfunction LotofacilPage() {\r\n  const [jogos, setJogos] = useState(jogosStore.getJogos());\r\n\r\n  useEffect(() => {\r\n    jogosStore.addChangeListener(onChange);\r\n    if (jogosStore.getJogos().length === 0) loadJogos();\r\n    return () => jogosStore.removeChangeListener(onChange); // Clean up data\r\n  }, []);\r\n\r\n  function onChange() {\r\n    setJogos(jogosStore.getJogos());\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Lotofácil</h1>\r\n      <LotofacilList jogos={jogos} />\r\n    </div>\r\n  );\r\n}\r\nexport default LotofacilPage;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nfunction Header() {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"Menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Quero Mais Sorte\r\n          </Typography>\r\n          <Button color=\"inherit\" component={RouterLink} to=\"/\">\r\n            Home\r\n          </Button>\r\n          <Button color=\"inherit\" component={RouterLink} to=\"/lotofacil\">\r\n            Lotofácil\r\n          </Button>\r\n          <Button color=\"inherit\" component={RouterLink} to=\"/about\">\r\n            Sobre\r\n          </Button>\r\n          <Button\r\n            color=\"inherit\"\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            Admin\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleClose}>My account</MenuItem>\r\n            <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"./Home/HomePage\";\r\nimport AboutPage from \"./About/AboutPage\";\r\nimport PageNotFound from \"./PageNotFound\";\r\nimport LotofacilPage from \"./Loteria/Lotofacil/LotofacilPage\";\r\nimport Header from \"./_common/Header\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/about\" component={AboutPage} />\r\n        <Route path=\"/lotofacil\" component={LotofacilPage} />\r\n        <Route component={PageNotFound} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}